Salieri
=======

A Roblox reinforcement learning project.

=======

Uses FastAPI for model <-> ROBLOX communication via HTTP requests.
ROBLOX Studio: 2000 requests/min
Timelag: >30ms

ROBLOX: 500 requests/min
Timelag: >120ms

=======

TODO:
- Autoregressive policies
- Behavior trees
- Boost decision trees
- Design more scenarios
- Replicate training environment in Python
- Wezaemon

Notes:
- Off-policies found to perform better since training via ROBLOX
  worsens on-policies sample inefficiency.
- On-policies are too highly correlated and easily leads the agent
  to bias its action and converge to a suboptimal policy.

=======

References:
1. Soft Actor-Critic: Off-Policy Maximum Entropy Deep Reinforcement Learning with a Stochastic Actor
   by Haarnoja et al. (https://arxiv.org/pdf/1801.01290)
2. Soft Actor-Critic Algorithms and Applications
   by Haarnoja et al. (https://arxiv.org/pdf/1812.05905)
3. Prioritized Experience Replay
   by Schaul et al. (https://arxiv.org/pdf/1511.05952)
4. Grandmaster level in StarCraft II using multi-agent reinforcement learning
   by Google Deepmind (https://storage.googleapis.com/deepmind-media/research/alphastar/AlphaStar_unformatted.pdf)